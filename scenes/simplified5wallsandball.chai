                                            
def material(color) {
  Materials.uniform( [ "ambient": color * 0.2,
                       "diffuse": color * 0.8,
                       "specular": Colors.white(),
                       "light_filtering": color,
                       "specular_exponent": 50] )
}

def scene_at(now) {

	var camera = Cameras.perspective( [ "eye": pos(0,0,8),
	                                    "look_at": pos(0,0,0) ] )
	                                    
	var primitives = []

	//primitives.push_back(decorate(redMat, sphere()))
	primitives.push_back(translate(vec(0,0,-4), decorate(material(Colors.white()), xy_plane())))
	primitives.push_back(translate(vec(0,4,0), decorate(material(Colors.blue()), xz_plane())))
	primitives.push_back(translate(vec(0,-4,0), decorate(material(Colors.blue()), xz_plane())))
	primitives.push_back(translate(vec(4,0,0), decorate(material(Colors.green()), yz_plane())))
	primitives.push_back(translate(vec(-4,0,0), decorate(material(Colors.green()), yz_plane())))
	
	primitives.push_back(decorate(material(Colors.red()), translate(Animations.circular(pos(0,0,2),
	                                                               pos(0,0,0),
	                                                               vec(0,1,0),
	                                                               interval(degrees(0), degrees(360)),
	                                                               seconds(5))[now] - pos(0,0,0), 
	                                                               sphere())))
	
	
	
	var root = union(primitives)
	
	var lights = [ Lights.omnidirectional( pos(2,3,3), Colors.white() ) ]
	
	var scene = create_scene(camera, root, lights)
}
var raytracer = Raytracers.latest()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.stratified(1,1),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.studio()] )