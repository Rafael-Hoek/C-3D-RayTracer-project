def material(c)
{
  Materials.uniform( [ "ambient": c * 0.1,
                       "diffuse": c * 0.8,
                       "specular": Colors.white() * 0.8,
                       "specular_exponent": 10,
                       "transparency": 0,
                       "refractive_index": 0 ] )
}                                            
var red = Materials.uniform( [ 	"ambient": Colors.red() * 0.2,
								"diffuse": Colors.red() * 0.8,
                      	 		"specular": Colors.white(),
                       			"specular_exponent": 50] )

def scene_at(now) {

	var x = Animations.animate(0, 25, seconds(5))
	
	var camera = Cameras.perspective( [ "eye": pos(0,0,x[now]),
	                                    "look_at": pos(0,3,0) ] )
	                                    
	var primitives = []

	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-10*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-9*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-8*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-7*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-6*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-5*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-4*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-3*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-2*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,-1*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,0*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,1*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,2*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,3*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,4*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,5*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,6*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,7*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,8*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,9*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,10*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,11*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,12*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,13*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,14*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,15*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,16*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,17*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,18*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,19*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(3,20*3,0),sphere())))
	
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-10*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-9*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-8*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-7*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-6*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-5*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-4*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-3*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-2*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,-1*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,0*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,1*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,2*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,3*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,4*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,5*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,6*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,7*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,8*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,9*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,10*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,11*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,12*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,13*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,14*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,15*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,16*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,17*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,18*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,19*3,0),sphere())))
	primitives.push_back(decorate(material(Colors.red()),translate(vec(-3,20*3,0),sphere())))
	
	primitives.push_back(decorate(material(Colors.white()),translate(vec(-6,0,0), yz_plane())))
	primitives.push_back(decorate(material(Colors.white()),translate(vec(6,0,0), yz_plane())))
	
	  
	
	var root = union(primitives)
	
	var lights = [ Lights.omnidirectional( pos(0,0,5), Colors.white() * 0.6 ),Lights.omnidirectional( pos(0,0,-5), Colors.white() * 0.6 ) ]
	
	var scene = create_scene(camera, root, lights)
}
var raytracer = Raytracers.v4()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.stratified(1,1),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.studio()] )