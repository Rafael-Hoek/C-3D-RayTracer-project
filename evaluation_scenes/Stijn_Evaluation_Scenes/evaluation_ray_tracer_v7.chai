def material(color) {
  Materials.uniform( [ "ambient": color * 0.2,
                       "diffuse": color * 0.8,
                       "translucency": 0.6] )
}

def scene_at(now)
{


var x = Animations.animate(0, -10, seconds(4.85))

var camera = Cameras.perspective( [ "eye": pos(10 + x[now],0,5),
                                    "look_at": pos(0,0,0) ] )
                                    
var root = union([
	    translate(vec(1.5,0,3), decorate(material(Colors.red()), sphere())),
	    translate(vec(-1.5,0,3), decorate(material(Colors.red()), sphere())),
	    
	    translate(vec(1.5,0,0), decorate(material(Colors.green()), sphere())),
	    translate(vec(-1.5,0,0), decorate(material(Colors.green()), sphere())),
	    
	    translate(vec(1.5,0,-3), decorate(material(Colors.blue()), sphere())),
	    translate(vec(-1.5,0,-3), decorate(material(Colors.blue()), sphere())),	
	    
	    translate(vec(1.5,0,-6), decorate(material(Colors.red()), sphere())),
	    translate(vec(-1.5,0,-6), decorate(material(Colors.red()), sphere())),
	    
	    translate(vec(1.5,0,-9), decorate(material(Colors.green()), sphere())),
	    translate(vec(-1.5,0,-9), decorate(material(Colors.green()), sphere())),
	    
	    translate(vec(1.5,0,-12), decorate(material(Colors.blue()), sphere())),
	    translate(vec(-1.5,0,-12), decorate(material(Colors.blue()), sphere()))	
   	])

var lights = [ Lights.omnidirectional( pos(0,3,0), Colors.white() ) ]

var scene = create_scene(camera, root, lights)



}

var raytracer = Raytracers.v7()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.single(),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(5),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )