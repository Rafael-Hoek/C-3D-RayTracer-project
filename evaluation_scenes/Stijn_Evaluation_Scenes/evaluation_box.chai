def material(color) {
  Materials.uniform( [ "ambient": color * 0.2,
                       "diffuse": color * 0.8,
                       "specular": Colors.white(),
                       "specular_exponent": 50] )
}

def scene_at(now)
{


var red = Materials.uniform( [ "ambient": Colors.red() * 0.8,
                               "diffuse": Colors.red() * 0.5 ] )

var x = Animations.animate(-13, 0, seconds(5))
var z = Animations.animate(8, 13, seconds(5))

var camera = Cameras.perspective( [ "eye": pos(x[now],0,z[now]),
                                    "look_at": pos(0,0,0) ] )
                                    
                                    
var root = union([
		translate(vec(0,0,-8), decorate(material(Colors.white()), xy_plane())),
		
		translate(vec(-3 - 1.5,-0.5,0), decorate(red, cube())),
		
		translate(vec(-3 - 1.5,1-0.5,0), decorate(red, cube())),
		translate(vec(-3 - 1.5,2-0.5,0), decorate(red, cube())),
		translate(vec(-3 - 1.5,3-0.5,0), decorate(red, cube())),
		
		translate(vec(-2- 1.5,3-0.5,0), decorate(red, cube())),
		translate(vec(-1- 1.5,3-0.5,0), decorate(red, cube())),
		translate(vec(0- 1.5,3-0.5,0), decorate(red, cube())),
		
		translate(vec(-3- 1.5,-1-0.5,0), decorate(red, cube())),
		translate(vec(-3- 1.5,-2-0.5,0), decorate(red, cube())),
		
		translate(vec(-2- 1.5,-2-0.5,0), decorate(red, cube())),
		translate(vec(-1- 1.5,-2-0.5,0), decorate(red, cube())),
		translate(vec(0- 1.5,-2-0.5,0), decorate(red, cube())),
		
		
		translate(vec(1- 1.5,0,0), decorate(red, cube())),
		translate(vec(2- 1.5,0,0), decorate(red, cube())),
		translate(vec(0- 1.5,0,0), decorate(red, cube())),
		translate(vec(1- 1.5,1,0), decorate(red, cube())),
		translate(vec(1- 1.5,-1,0), decorate(red, cube())),
		
		
		translate(vec(4- 1.5,0,0), decorate(red, cube())),
		translate(vec(5- 1.5,0,0), decorate(red, cube())),
		translate(vec(6- 1.5,0,0), decorate(red, cube())),
		translate(vec(5- 1.5,1,0), decorate(red, cube())),
		translate(vec(5- 1.5,-1,0), decorate(red, cube()))
	    
   	])

var lights = [ Lights.omnidirectional( pos(0,0,15), Colors.white() ) ]

var scene = create_scene(camera, root, lights)

}

var raytracer = Raytracers.latest()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.single(),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(5),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )